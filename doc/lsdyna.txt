*lsdyna.txt*		For Vim version 8.0		Last change: 2018 January 5th
================================================================================
                   _               ____                                        ~
                  | |    ___      |  _ \ _   _ _ __   __ _                     ~
                  | |   / __|_____| | | | | | | '_ \ / _` |                    ~
                  | |___\__ \_____| |_| | |_| | | | | (_| |                    ~
                  |_____|___/     |____/ \__, |_| |_|\__,_|                    ~
                                         |___/                                 ~
                                               VIM Filetype Plugin             ~

              -----------------------------------------------------
              Author: Bartosz Gradzik (bartosz.gradzik@hotmail.com)
              ----------------------------------------------------- 

================================================================================
CONTENTS

    1. Introduction............................|lsdyna-introduction|
    2. Quick start.............................|lsdyna-start|
    3. Syntax highlighting.....................|lsdyna-syntax|
    4. Folding.................................|lsdyna-folding|
    5. Ls-Dyna omni-completion.................|lsdyna-omniComplete|
       5.1 Keyword completion..................|lsdyna-completeKeyword|
       5.2 Keyword variable completion.........|lsdyna-completeKvars|
       5.3 Id completion.......................|lsdyna-completeId|
       5.4 Parameter completion................|lsdyna-completeParameter|
    6. Mappings & functions....................|lsdyna-mappings|
       6.1 Mappings list.......................|lsdyna-mapList|
       6.2 Comment/uncomment...................|lsdyna-comment|
       6.3 Data line autoformating.............|lsdyna-autoFormat|
       6.4 Text objects........................|lsdyna-textObject|
           6.4.1 Keyword objects...............|lsdyna-objectKeyword|
           6.4.2 Column objects................|lsdyna-objectColumn|
       6.5 Tags................................|lsdyna-tags|
       6.6 File name completion................|lsdyna-includeName|
       6.7 Include jump........................|lsdyna-includeJump|
    7. Commands................................|lsdyna-commands|
       7.1 Curve commands......................|lsdyna-curveCommands|
           7.1.1 LsCurveScale..................|lsdyna-curveScale|
           7.1.2 LsCurveOffset.................|lsdyna-curveOffset|
           7.1.3 LsCurveAddPoint...............|lsdyna-curveAddPoint|
           7.1.4 LsCurveResample...............|lsdyna-curveResample|
           7.1.5 LsCurveMirror.................|lsdyna-curveMirror|
           7.1.6 LsCurveCut....................|lsdyna-curveCut|
       7.2 Node commands.......................|lsdyna-nodeCommands|
           7.2.1 LsNodeScale...................|lsdyna-nodeScale|
           7.2.2 LsNodeRotate..................|lsdyna-nodeRotate|
           7.2.3 LsNodeTranslate...............|lsdyna-nodeTranslate|
           7.2.4 LsNodePos6p...................|lsdyna-nodePos6p|
           7.2.5 LsNodeMirror..................|lsdyna-nodeMirror|
       7.3 Element commands....................|lsdyna-elemCommands|
           7.3.1 LsElemFindPid.................|lsdyna-elemFindPid|
           7.3.2 LsElemChangePid...............|lsdyna-elemChangePid|
           7.3.3 LsElemReverseNormals..........|lsdyna-elemReverseNormals|
       7.4 Miscellaneous commands..............|lsdyna-miscCommands|
           7.4.1 LsOffsetId....................|lsdyna-offsetId|
           7.4.2 LsInclCheckPath...............|lsdyna-inclCheckPath|
           7.4.3 LsIncl2Buff...................|lsdyna-incl2Buff|
           7.4.4 LsTags........................|lsdyna-lstags|
    8. License.................................|lsdyna-license|

================================================================================
1. Introduction                                            *lsdyna-introduction*

It is documentation for Ls-Dyna VIM filetype plugin.

Ls-Dyna is simulation software developed by Livermore Software Technology
Corporation (www.lstc.com). The plugin is designed to work with Ls-Dyna
keyword file used to store model information.

Ls-Dyna filetype plugin overview:
  - syntax highlighting
  - node/element/curve tables folding
  - omni-completion for keywords/parameters/options/ids
  - useful mappings, functions and commands

================================================================================
2. Quick start                                                    *lsdyna-start*

To use file type plugin add following lines to vimrc file:
>
	filetype plugin on
	syntax on
<
The plugin loads automatic for files with extension:
  - *.k
  - *.key

To load the plugin manually use:
>
	:set filetype=lsdyna
<
To check if the plugin is loaded into VIM use:
>
	:set filetype?
<
================================================================================
3. Syntax highlighting                                           *lsdyna-syntax*

Syntax highlighting supports:
  - keyword line (start with "*")
  - comment line (start with "$")
  - title line
  - data line

The plugin supports three types of data line syntax highlighting:
1) 1x8,3x16,2x8 field
   - *NODE
   - *AIRBAG_REFERENCE_GEOMETRY
2) 10x8 field
   - *ELEMENT_
   - *AIRBAG_SHELL_REFERENCE_GEOMETRY
3) 8x10 field
   - all other keywords (*PART, *SECTION_, *CONTACT_ ...)

================================================================================
4. Folding                                                      *lsdyna-folding*

All lines not started with "*" (keyword lines) or "$" (comment lines) are folded.
Minimal number of lines to fold is four.

In practise node/element lines and curves data points with more than four
lines are folded. To break folding put comment line.

================================================================================
5. Ls-Dyna omni-completion                                 *lsdyna-omniComplete*

Filetype plugin has omni-completion for Ls-Dyna keyword file.
The completion is trigged with <Ctrl-Tab> or <Ctrl-x><Ctrl-o>.

Depend on context you can complete:
- keyword (*NODE, *ELEMENT_, ...)
- keyword option (elform, dof, vad, ...)
- id (part, section, material, set, curve, ...)
- parameter (any names starting with "&" sign)

--------------------------------------------------------------------------------
5.1 Keyword completion                                    *lsdyna-insertKeyword*

Keyword completion add keyword to your inputdeck from library.

--------------------------------------------------------------------------------
5.1.1 Inserting keywords

In insert mode start typing keyword name and complete with <Ctrl-Tab>:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*pa<Ctrl-Tab>                                |
    |$                                            |
    |~                                            |
    |~                                            |
    |~                                            |
    |~                                            |
    |~                                            |
    |~                                            |
    |command-line=================================|
    |                                             |
    +---------------------------------------------+

Menu with available keywords will pop up:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*pa                                          |
    ||parameter            |                      |
    ||parameter_expression |                      |
    ||part                 |                      |
    ||part_inertia         |                      |
    |+--------------------++                      |
    |~                                            |
    |~                                            |
    |command-line=================================|
    |                                             |
    +---------------------------------------------+

Select keyword from the list to add the keyword into your keyword file:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*PART                                        |
    |$#title                                      |
    |?title?                                      |
    |$#      pid     secid       mid              |
    |          ?         ?         ?              |
    |$                                            |
    |~                                            |
    |~                                            |
    |command-line=================================|
    |                                             |
    +---------------------------------------------+

*NOTE: Asterisk sign "*" at the beginning is not mandatory.
       Keyword name is not case sensitive.

--------------------------------------------------------------------------------
5.1.2 Keywords templates

You can create your own instance of keywords and store them in the library.

1. Predefined keywords
   - keyword with predefined values like
     - gravity load for different system unit
     - contact definition with non-default values
   - stored in the library subdirectories
2. Templates
   - group of keywords often used
     - like master deck with *CONTROL_ and *DATABASE_ keywords
   - stored in "_" subdirectory in the library
   - template file names must start with "_"
   - to insert a template from the library use _<Ctrl-Tab>

--------------------------------------------------------------------------------
5.1.3 Add new keywords to library

Library is "keywords" directory with subdirectories and Ls-Dyna keywords.
The subdirectories are organized in alphabetical order, in each subdirectory
are *.k files with keywords definitions.

Keyword library structure:
>
	- lsdyna                   -> main plugin level
	  - keywords               -> keyword library
	    - _                    -> templates subdirectory
	    - a
	    - b
	    - p                    -> p-keywords subdirectory
	      - part.k
	      - part_contact.k     -> keyword definition
	      - part_inertia.k
	      - ...
	    - s                    -> s-keywords subdirectory
	      - section_shell.k
	      - section_solid.k    -> keyword definition
	      - section_beam.k
	      - ...
	    - ...
<
Library rules:
- file names must be lowercase
- do not use any white signs (space bar)
- file names must start with subdirectory letter
- *.k extension is mandatory for all files

NOTE: Keyword library are initialized once per VIM session.
      New keyword will be available after VIM session restart.

--------------------------------------------------------------------------------
5.2 Keyword variable completion                           *lsdyna-completeKvars*

Keyword variable (kvar) completion let you in easy way set keyword variables
like "dof" or "vad" in *BOUNDARY_PRESCRIBED_MOTION_ or "elform" in *SECTION_.

--------------------------------------------------------------------------------
5.2.1 Set keyword variable

Go to keyword variable field and run completion with <Ctrl-Tab>:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*BOUNDARY_PRESCRIBED_MOTION_NODE             |
    |$#  typeid       dof       vad      lcid     I
    |          <Ctrl-Tab>                         I
    |         >|        1 x-translation |<        |
    |          |        2 y-translation |         |
    |          |        3 z-translation |         |
    |          +------------------------+         |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*BOUNDARY_PRESCRIBED_MOTION_NODE             |
    |$#  typeid       dof       vad      lcid     I
    |                   1<Ctrl-Tab>               I
    |                    |        0 acceleration ||
    |                    |        1 velocity     ||
    |                   >|        2 displacement ||
    |                    +-----------------------+|
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

*NOTE: Keyword variable completion use variable headers to distinguish between
       different variables. With no headers or headers not like in Ls-Dyna
       documentation keyword variable completion will fail.

--------------------------------------------------------------------------------
5.2.1 Keyword variable library

List of all variables and their keywords are saved in file
>
	- /lsdyna/keywords/dynaKvars.dat

Each line in the file is one value for specific variable in specific keyword.
All entries are separated with ":" sign.
>
	- keywordName ; variableName ; variableValue ; variableDescription

Example of lines for "dof" variable in *LOAD_NODE keyword
>
	load_node : dof : 1 : x-force
	load_node : dof : 2 : y-force
	load_node : dof : 3 : z-force
	load_node : dof : 4 : follower force
	load_node : dof : 5 : x-moment
	load_node : dof : 6 : y-moment
	load_node : dof : 7 : z-moment
	load_node : dof : 8 : follower moment

*NOTE: Keyword variable library is initialized once per session.

--------------------------------------------------------------------------------
5.3 Id completion                                            *lsdyna-completeId*

With id completion you can choose between ids in your keyword file.

Depend on cursor position and ls-dyna header (pid, sid, mid, ...) the plugin
gives you ids of items you can use like parts, sections, materials, ...

List of support keywords
- *PART
- *SECTION
- *MAT
- *SET
- *DEFINE_CURVE
- *DEFINE_COORDINATE
- *DEFINE_FRICTION
- *DEFINE_TRANSFORMATION
- *DEFINE_VECTOR

*NOTE: For unknow headers list of parts and sets is returned.

Example:

For "lcid" field list of *DEFINE_CURVE ids will be returned

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*BOUNDARY_PRESCRIBED_MOTION_NODE             |
    |$#  typeid       dof       vad      lcid     I
    |                   1         2<Ctrl-Tab>     |
    |                              |       10 Gravity_load |
    |                             >|      100 Movement     |<
    |                              |     1000 Hardening    |
    |                              +-----------------------+
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

For "typeid" list of all parts and sets will be given (S - set, P - part)

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*BOUNDARY_PRESCRIBED_MOTION_NODE             |
    |$#  typeid       dof       vad      lcid     I
    |<Ctrl-Tab>         1         2        10     |
    | |       10 S Load    |<                     |
    | |       20 S Fix     |                      |
    | |        3 P Support |                      |
    | |        4 P Plate   |                      |
    | |       10 P Bracket |                      |
    | +--------------------+                      |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

To short list use id prefix and next <Ctrl-Tab>, example below will give all
ids starting with '1' only:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*BOUNDARY_PRESCRIBED_MOTION_NODE             |
    |$#  typeid       dof       vad      lcid     I
    | 1<Ctrl-Tab>       1         2        10     |
    ||       10 S Load    |<                      |
    ||       10 P Bracket |                       |
    |+--------------------+                       |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

You can use keyword name for completion as well:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*BOUNDARY_PRESCRIBED_MOTION_NODE             |
    |$#  typeid       dof       vad      lcid     I
    | lo<Ctrl-Tab>       1         2        10    |
    ||       10 S Load    |<                      |
    |+--------------------+                       |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*BOUNDARY_PRESCRIBED_MOTION_NODE             |
    |$#  typeid       dof       vad      lcid     I
    |                   1         2 grav<Ctrl-Tab>|
    |                              |       10 Gravity_load |
    |                              +-----------------------+
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

*NOTE: For name completion avoid last position in the column.

Id list is refreshed every time <Ctrl-Tab> is trigged so all new added
keywords are available as well. By default VIM scan all open buffers to build
id list. If current buffer include *INCLUDE keyword include files will be open
as hidden buffers and scan as well. Performance of id completion strongly
depends on number of includes and their sizes.

--------------------------------------------------------------------------------
5.4 Parameter completion                              *lsdyna-completeParameter*

Parameter completion let you choose from list of all parameters in your model.

Parameter list includes:
- parameter name
- parameter type (R, I, C)
- parameter value or expression

Start typing name with "&" sign and complete with <Ctrl-Tab>:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*PARAMETER                                   |
    |$#    name       val                         |
    |R   thkTop       2.7                         |
    |R  thkDown       1.5                         |
    |I   intPnt         5                         |
    |*PARAMETER_EXPRESSION                        |
    |$#    name val                               |
    |R area10mm 3.14*10.0**2                      |
    |R area15mm 3.14*15.0**2                      |
    |$                                            |
    |$------------------------------------------- |
    |$                                            |
    |*SECTION_SHELL_TITLE                         |
    |$# title                                     |
    |Top_shell                                    |
    |$#   secid    elform      shrf       nip     |
    |       100        16     0.833         2     |
    |$#      t1        t2        t3        t4     |
    | &th<Ctrl-Tab>                               |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*PARAMETER                                   |
    |$#    name       val                         |
    |r   thkTop       2.7                         |
    |rthkBottom       1.5                         |
    |iintPoints         5                         |
    |*PARAMETER_EXPRESSION                        |
    |$#    name val                               |
    |R area10mm 3.14*10.0**2                      |
    |R area15mm 3.14*15.0**2                      |
    |$                                            |
    |$------------------------------------------- |
    |$                                            |
    |*SECTION_SHELL_TITLE                         |
    |$# title                                     |
    |Top_shell                                    |
    |$#   secid    elform      shrf       nip     |
    |       100        16     0.833         2     |
    |$#      t1        t2        t3        t4     |
    | &thk<Ctrl-Tab>                              |
    | |thkTop    R 2.7      |                     |
    | |thkDown   R 1.5      |                     |
    | +---------------------+                     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

To get list of all parameters use only "&" <ctrl-Tab>:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*PARAMETER                                   |
    |$#    name       val                         |
    |r   thkTop       2.7                         |
    |rthkBottom       1.5                         |
    |iintPoints         5                         |
    |*PARAMETER_EXPRESSION                        |
    |$#    name val                               |
    |R area10mm 3.14*10.0**2                      |
    |R area15mm 3.14*15.0**2                      |
    |$                                            |
    |$------------------------------------------- |
    |$                                            |
    |*SECTION_SHELL_TITLE                         |
    |$# title                                     |
    |Top_shell                                    |
    |$#   secid    elform      shrf       nip     |
    |       100        16     0.833         2     |
    |$#      t1        t2        t3        t4     |
    | &<Ctrl-Tab>                                 |
    | |thkUp     R 2.7          |                 |
    | |thkDown   R 1.5          |                 |
    | |intPoints I 5            |                 |
    | |area10mm  R 3.14*10.0**2 |                 |
    | |area15mm  R 3.14*10.0**2 |                 |
    | +-------------------------+                 |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

Parameter list is refreshed every time <Ctrl-Tab> is trigged so all new added
keywords are available as well. By default VIM scan all open buffers to build
id list. If current buffer include *INCLUDE keyword includes files will be open
as hidden buffers and scan as well. Performance of parameter completion strongly
depends on number of includes and their sizes.

================================================================================
6. Mappings                                                    *lsdyna-mappings*

The plugin defines mappings and functions to work with Ls-Dyna keyword file.

--------------------------------------------------------------------------------
6.1 Mappings list                                               *lsdyna-mapList*

]]       : jump to next keyword
[[       : jump to previous keyword
4<Space> : put "$" at the beginning of the line (works only if "4" is in 1st col)
<ll><ll> : autoformating function
<Alt-c>  : comment/uncomment line
<Alt-r>  : remove all comment lines from selection
<ll>c    : put empty comment line below
<ll>C    : put empty comment line above
<ll>0    : separator with title below
<ll>1    : separator line (type 1) below
<ll>2    : separator line (type 2) below
<ll>3    : separator line (type 3) below
<ll>)    : separator with title above (is like <ll>0 with <Shift>)
<ll>!    : separator line (type 1) above (is like <ll>1 with <Shift>)
<ll>@    : separator line (type 2) above (is like <ll>2 with <Shift>)
<ll>#    : separator line (type 3) above (is like <ll>3 with <Shift>)

<ll> is <localleader> key in VIM. By default it is backslash "\".
You can overwrite <localleader>, for details see :help <localleade>.

--------------------------------------------------------------------------------
6.2 Comment/uncomment                                           *lsdyna-comment*

The function is used to comment/uncomment line/lines in Ls-Dyna keyword file.
Function is mapped with <ALT-c> or <Ctrl-c>.

If selected line starts with "$" it will be uncommented, if the line does not
start with "$" it will be commented. If you selected more than one line
comment/uncomment will be performed according to first line from selection.

Select lines you want to comment:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
   >|*DEFINE_CURVE_TITLE                          |<
   >|$# title                                     |<
   >|Load                                         |<
   >|$#    lcid      sidr       sfa       sfo     |<
   >|         1         0       1.0       1.0     |<
   >|$#                a1                  o1     |<
   >|                 0.0                 0.0     |<
   >|                 1.0                 1.0     |<
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

Use <Alt-c>:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |$*DEFINE_CURVE_TITLE                         |
    |$$# title                                    |
    |$Load                                        |
    |$$#    lcid      sidr       sfa       sfo    |
    |$         1         0       1.0       1.0    |
    |$$#                a1                  o1    |
    |$                 0.0                 0.0    |
    |$                 1.0                 1.0    |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

To uncomment select the same lines and use <Alt-c> once again.

--------------------------------------------------------------------------------
6.3 Data line autoformating                                  *lsdyna-autoFormat*

The plugin has simple autoformating function. The function is trigged with
<ll><ll> mapping ("\\" for default VIM settings). The function guesses under
what keyword is and format data line according to syntax rules.
It can be used also for conversion from free to fixed format.

Example: Column position adjusting

Put cursor at the line:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*SET_PART_TITLE                              |
    |$# title                                     |
    |Contact_parts                                |
    |$#    pid1      pid2      pid3      pid4     |
   >|1 2 3                                        |<
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

Run <ll><ll> to adjust the line with 10 wide columns:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*SET_PART_TITLE                              |
    |$# title                                     |
    |Contact_parts                                |
    |$#    pid1      pid2      pid3      pid4     |
    |         1         2         3               |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

Example: Free to fixed format conversion

Put cursor at the line:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*SECTION_SHELL                               |
    |$#   secid    elform      shrf       nip     |
   >| 10, 2, , 5                                  |<
    |$#      t1        t2        t3        t4     |
    |       1.0                                   |
    |$                                            |
    |~                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

Run <ll><ll> to adjust the line:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*SECTION_SHELL                               |
    |$#   secid    elform      shrf       nip     |
    |        10         2                   5     |
    |$#      t1        t2        t3        t4     |
    |       1.0                                   |
    |$                                            |
    |~                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

Example: *DEFINE_CURVE abscissa and ordinate values

Make visual line selection for data lines:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
   >| 0.0 0.0                                     |<
   >| 1.0 1.0                                     |<
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

Use <ll><ll> to format x and y values to correct positions:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
    |                 0.0                 0.0     |
    |                 1.0                 1.0     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

The function support more than one point in line.

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
   >| 0.0, 0.0, 1.0, 1.0, 2.0, 2.0, 3.0, 3.0      |<
   >| 4.0, 4.0, 5.0, 5.0, 6.0, 6.0, 7.0, 7.0      |<
   >| 8.0, 8.0                                    |<
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

Use <ll><ll> with selected lines:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
    |                 0.0                 0.0     |
    |                 1.0                 1.0     |
    |                 2.0                 2.0     |
    |                 3.0                 3.0     |
    |                 4.0                 4.0     |
    |                 5.0                 5.0     |
    |                 6.0                 6.0     |
    |                 7.0                 7.0     |
    |                 8.0                 8.0     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

Example: Parameters autoformating

The function is able recognise parameter type (integer, real, character) and
set correct prefix (I, R, C). If prefix is defined it will not be overwrite.

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*PARAMETER                                   |
    |$#    name       val                         |
   >|par1 100                                     |<
   >|par2 -10                                     |<
   >|par3 1.0                                     |<
   >|par4 -5.0e-03                                |<
   >|par5 name01                                  |<
   >| R par6 100                                  |<
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

Use <ll><ll> with selected lines:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*parameter                                   |
    |$#    name       val                         |
    |I     par1       100                         |
    |I     par2       -10                         |
    |R     par3       1.0                         |
    |R     par4  -5.0e-03                         |
    |C     par5    name01                         |
    |I     par6       100                         |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

NOTE: Only one parameter in line is supported.

--------------------------------------------------------------------------------
6.4 Text objects                                             *lsdyna-textObject*

The plugin gives you new VIM text objects useful with Ls-Dyna syntax.
If you are not familiar with VIM text objects see ":help text-objects".

Ls-Dyna filetype plugin text-objects:
- <ik> : inside keyword
- <ak> : around keyword
- <ip> : inside keyword column
- <ap> : around keyword column

You can use them with other VIM commands like <d>, <y>, <v>.
Both text object work the same way. There is no distinguish like in <aw>/<iw>.

--------------------------------------------------------------------------------
6.4.1 Keyword objects                                     *lsdyna-objectKeyword*

With keyword text object you can in easy way select whole keyword definition.

Keyword test objects:
- <ik> : inside keyword
- <ak> : around keyword

Examples of use:

Put cursor at any keyword line:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |$-- Start load curve --                      |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
   >|Load                                         |<
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
    |                 0.0                 0.0     |
    |                 1.0                 1.0     |
    |$-- End load curve --                        |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

Use <dak>/<dik> to delete whole *DEFINE_CURVE_TITLE keyword:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |$-- Start load curve --                      |
    |$-- End load curve --                        |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

You can think about <dak> as "delete all keyword".

Put cursor at any keyword line:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*PART                                        |
    |$#title                                      |
    |Support                                      |
    |$#      pid     secid       mid              |
   >|          1         1         1              |<
    |$                                            |
    |~                                            |
    |~                                            |
    |command-line=================================|
    |                                             |
    +---------------------------------------------+

Use <yak>/<yik> to yank *PART keyword, now you can go to any line and use <p> normal
command to put copy of the keyword in a new place you want:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*PART                                        |
    |$#title                                      |
    |Support                                      |
    |$#      pid     secid       mid              |
    |          1         1         1              |
    |$                                            |
    |*PART                                        |
    |$#title                                      |
    |Support                                      |
    |$#      pid     secid       mid              |
    |          1         1         1              |
    |~                                            |
    |~                                            |
    |command-line=================================|
    |                                             |
    +---------------------------------------------+

Put cursor at any keyword line:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
   >|*PART                                        |<
    |$#title                                      |
    |Support                                      |
    |$#      pid     secid       mid              |
    |          1         1         1              |
    |$                                            |
    |~                                            |
    |~                                            |
    |command-line=================================|
    |                                             |
    +---------------------------------------------+

Use <vak>/<vik> for visual selection of the keyword,
next use <Alt-c> to comment whole keyword:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |$*PART                                       |
    |$$#title                                     |
    |$Support                                     |
    |$$#      pid     secid       mid             |
    |$          1         1         1             |
    |$                                            |
    |~                                            |
    |~                                            |
    |command-line=================================|
    |                                             |
    +---------------------------------------------+

--------------------------------------------------------------------------------
6.4.2 Column objects                                       *lsdyna-objectColumn*

With column text object you can select column under cursor position.
Supported keywords:
- *NODE
- *ELEMENT_

Column text objects (both works the same):
- <ic> : inside column
- <ac> : around column

Examples of use:

Put cursor at column you want to select at any line:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*ELEMENT_SHELL                               |
    |$#   eid     pid    n1     n2     n3     n4  |
    |       1    2000     1      2      3      4  |
   >|       2    1000     5      6      7      8  |<
    |       3    3000     9     10     11     12  |
    |       4    2000    13     14     15     16  |
    |$            ^                               |
    |                                             |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

Use <vac>/<vic> to select whole column

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*ELEMENT_SHELL                               |
    |$#   eid     pid    n1     n2     n3     n4  |
    |        vvvvvvv|
    |       1    2000     1      2      3      4  |
    |       2    1000     5      6      7      8  |
    |       3    3000     9     10     11     12  |
    |       4    2000    13     14     15     16  |
    |        ^^^^^^^^                             |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

--------------------------------------------------------------------------------
6.5 Tags                                                           *lsdyna-tags*

The plugin lets you use part/section/material/... ids as tags.
Tags file is created and updated every time id or parameter completion is used.
To manually create tags file use command:
>
	:LsTags

Examples:

Set cursor on id and use <Ctrl>] to jump:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*BOUNDARY_PRESCRIBED_MOTION_NODE             |
    |$#  typeid       dof       vad      lcid     I
    |      1001         1         2      2000     |
    |$                                   ^        |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

If id is unique you will be moved to id position otherwise you must
specify id you want to jump.

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*BOUNDARY_PRESCRIBED_MOTION_NODE             |
    |$#  typeid       dof       vad      lcid     I
    |      1001         1         2      2000     |
    |$                                   ^        |
    |$                                            |
    |command-line=================================+
    |                                             |
    | 1 2000 F C PART                             |
    |            Support_plate                    |
    | 2 2000 F C CURVE                            |
    |            Load                             |
    | 3 2000 F C MATERIAL                         |
    |            Steel                            |
    | 4 2000 F C VECTOR                           |
    |            x-direction                      |
    |                                             |
    |Choose number: ?                             |
    +---------------------------------------------+

To jump to *DEFINE_CURVE id 2000 put 2 and confirm with <Enter>.

You can use "tjump" command to go to any id in the file

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*BOUNDARY_PRESCRIBED_MOTION_NODE             |
    |$#  typeid       dof       vad      lcid     I
    |      1001         1         2      1234     |
    |$                                            |
    |command-line=================================+
    |:tjump 1234                                  |
    +---------------------------------------------+

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
   >|      1234         0       1.0       1.0     |<
    |$#                a1                  o1     |
    |                 0.0                 0.0     |
    |                 1.0                 1.0     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

With "ptjump" you can preview id in second window.

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*BOUNDARY_PRESCRIBED_MOTION_NODE             |
    |$#  typeid       dof       vad      lcid     I
    |      1001         1         2      1234     |
    |$                                            |
    |command-line=================================+
    |:ptjump 1234                                 |
    +---------------------------------------------+

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
   >|      1234         0       1.0       1.0     |<
    |$#                a1                  o1     |
    |                 0.0                 0.0     |
    |                 1.0                 1.0     |
    |$                                            |
    |command-line=================================+
    |$                                            |
    |*BOUNDARY_PRESCRIBED_MOTION_NODE             |
    |$#  typeid       dof       vad      lcid     I
    |      1001         1         2      1234     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

Tags is very powerful tool in VIM, read ":help tags" to get know it well.

--------------------------------------------------------------------------------
6.6 File name completion                                    *lsdyna-includeName*

With VIM build-in file completion <Ctrl-x><Ctrl-f> command you can in easy way
add a new include file to your master deck.

Use <Ctrl-x><Ctrl-f> to get list of files in include directory:

    +---------------------------------------------+
    |lsdyna_model.k===============================|
    |$                                            |
    |*INCLUDE                                     |
    |../OO_INC/<Ctrl-x><Ctrl-f>                   |
    |$                                            |
    |~                                            |
    |~                                            |
    |~                                            |
    |~                                            |
    |~                                            |
    |command-line=================================|
    |                                             |
    +---------------------------------------------+

Select include file:

    +---------------------------------------------+
    |lsdyna_model.k===============================|
    |$                                            |
    |*INCLUDE                                     |
    |../OO_INC/                                   |
    | | ../00_INC/include_A.inc  |                |
    | | ../00_INC/include_B.inc  |                |
    | | ../00_INC/include_C.inc  |<               |
    | | ../00_INC/include_D.inc  |                |
    | +--------------------------+                |
    |~                                            |
    |~                                            |
    |command-line=================================|
    |                                             |
    +---------------------------------------------+

    +---------------------------------------------+
    |lsdyna_model.k===============================|
    |$                                            |
    |*INCLUDE                                     |
    |../00_INC/include_C.inc                      |
    |$                                            |
    |~                                            |
    |~                                            |
    |~                                            |
    |~                                            |
    |~                                            |
    |command-line=================================|
    |                                             |
    +---------------------------------------------+

--------------------------------------------------------------------------------
6.7 Include jumps                                           *lsdyna-includeJump*

To jump from master deck into include file you can use <gf> or <gF> commands.

Jump commands:
- <gf> : open include file in current window
- <gF> : open include file in new window (vertical split)
- <gd> : open include directory in current window
- <gD> : open include directory in new window (vertical split)

Put cursor on the line with include path:

    +---------------------------------------------+
    |lsdyna_model.k===============================|
    |$                                            |
    |*INCLUDE                                     |
    |../OO_INC/include_A.inc                      |
    |*INCLUDE                                     |
   >|../OO_INC/include_B.inc                      |<
    |*INCLUDE                                     |
    |../OO_INC/include_C.inc                      |
    |$                                            |
    |~                                            |
    |~                                            |
    |~                                            |
    |~                                            |
    |command-line=================================|
    |                                             |
    +---------------------------------------------+

Use <gf> to jump:

    +---------------------------------------------+
    |include_B.inc================================|
    |$                                            |
    |$ include B                                  |
    |$                                            |
    |*NODE                                        |
    | 1000, 0.0, 0.0, 0.0                         |
    | ...                                         |
    |*ELEMENT_SHELL                               |
    | 1000, 1001, 1002, 1003, 1004                |
    | ...                                         |
    |~                                            |
    |command-line=================================|
    |                                             |
    +---------------------------------------------+

*NOTE: *INCLUDE_PATH is supported.

    +---------------------------------------------+
    |lsdyna_MASTER.key============================|
    |$                                            |
    |*INCLUDE_PATH                                |
    |/FEM/LSDYNA/INCL/MAT                         |
    |$                                            |
    |*INCLUDE                                     |
   >|matdbs_v01.inc                               |<
    |$                                            |
    |~                                            |
    |~                                            |
    |command-line=================================|
    |                                             |
    +---------------------------------------------+

Use <gf> normal command to open include file

    +---------------------------------------------+
    |matdbs_v01.inc===============================|
    |$                                            |
    |*MAT_ELASTIC_TITLE                           |
    |$# title                                     |
    |Steel                                        |
    |$#     mid        ro         e        pr     |
    |        10  7.85e-06     210.0       0.3     |
    |$                                            |
    |~                                            |
    |~                                            |
    |command-line=================================|
    |                                             |
    +---------------------------------------------+

================================================================================
7. Commands                                                    *lsdyna-commands*

The plugin gives you many useful commands to work with Ls-Dyna keyword file.

--------------------------------------------------------------------------------
7.1 Curve commands                                        *lsdyna-curveCommands*

Curve commands are design to work with x & y points under *DEFINE_CURVE keyword.
For instance you can do operation like scaling, shifting of the points, resample
the curve with new number of points, extend your curve and many more.

All curve commands unified number format of your points. First x-value control
how all points will be write into the file after operation. See example below:

Select curve lines and run command

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
   >|            0.00e+00                 0.0     |<
   >|                 1.0                 1.0     |<
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsCurveScale 10.0 5.0
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
    |            0.00e+00            0.00e+00     |
    |            1.00e+01            5.00e+00     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

Vales after scaling operation are write with new number format.

You can use this function to change number format only, not values.
Just update first x value and scale it with factors of 1.0.

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
   >|          0.0000e+00                 0.0     |<
   >|                 1.0                 1.0     |<
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsCurveScale 1.0 1.0
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
    |          0.0000e+00          0.0000e+00     |
    |          1.0000e+00          1.0000e+00     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

NOTE: Always keep in mind that format of first x value is important.
      In some situations you can loose some data.

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
   >|                 0.0                 0.0     |<
   >|               0.001               0.005     |<
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsCurveScale 1.0 1.0
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
    |                 0.0                 0.0     |
    |                 0.0                 0.0     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

After operation data precision have been lost. It is because first x value has
only one decimal place.

--------------------------------------------------------------------------------
7.1.1 LsCurveScale                                           *lsdyna-curveScale*

Description:
Scale x and y value of the curve.

Syntax:
:LsCurveScale xsf ysf

Arguments:
xsf - scaling factor for x
ysf - scaling factor for y

Command abbreviation:
:lcs<Space>

Example of use:

Make visual selection line with data lines:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
   >|                 0.0                 0.0     |<
   >|                 1.0                 1.0     |<
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsCurveScale 10.0 5.0
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
    |                 0.0                 0.0     |
    |                10.0                 5.0     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

--------------------------------------------------------------------------------
7.1.2 LsCurveOffset                                         *lsdyna-curveOffset*

Description:
Offset x and y values of the curve.

Syntax:
:LsCurveShift xoff yoff

Arguments:
x_off - offset value for x
y_off - offset value for y

Command abbreviation:
:lco<Space>

Example of use:

Make visual selection line with data lines:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
   >|                 0.0                 0.0     |<
   >|                 1.0                 1.0     |<
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsCurveOffset 10.0 5.0
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
    |                10.0                 5.0     |
    |                11.0                10.0     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

--------------------------------------------------------------------------------
7.1.3 LsCurveAddPoint                                     *lsdyna-curveAddPoint*

Description:
LsCurveAddPoint insert a new y value for x user value. For points outside range
new y value is linear extrapolated base on two first or two last points. For
points inside the range new y value is linear interpolated base on the nearest
points.

Synatx:
:LsCurveAddPoint x

Arguments:
x - user x value for new point

Command abbreviation:
:lca<Space>

Example of use:

Make visual selection line with data lines:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
   >|                 0.0                 0.0     |<
   >|                 2.0                 4.0     |<
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsCurveAddPoint -1.0
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
    |                -1.0                -2.0     |
    |                 0.0                 0.0     |
    |                 2.0                 4.0     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsCurveAddPoint 0.5
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
    |                 0.0                 0.0     |
    |                 0.5                 1.0     |
    |                 2.0                 4.0     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsCurveAddPoint 4.0
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
    |                 0.0                 0.0     |
    |                 2.0                 4.0     |
    |                 4.0                 8.0     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

--------------------------------------------------------------------------------
7.1.4 LsCurveResample                                     *lsdyna-curveResample*

Description:
Command allow you to resample the curve with new number of points.

Synatx:
:LsCurveResample -i incr
:LsCurveResample -p nump

Arguments:
incr - increment
nump - number of points

Command abbreviation:
:lcr<Space>

Example of use:

Make visual selection line with data lines:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
   >|                 0.0                 0.0     |<
   >|                 1.0                 1.0     |<
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsCurveResample -i 0.2
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
    |                 0.0                 0.0     |
    |                 0.2                 0.2     |
    |                 0.4                 0.4     |
    |                 0.6                 0.6     |
    |                 0.8                 0.8     |
    |                 1.0                 1.0     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsCurveResample -p 6
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
    |                 0.0                 0.0     |
    |                 0.2                 0.2     |
    |                 0.4                 0.4     |
    |                 0.6                 0.6     |
    |                 0.8                 0.8     |
    |                 1.0                 1.0     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

--------------------------------------------------------------------------------
7.1.5 LsCurveMirror                                         *lsdyna-curveMirror*

Description:
Mirror curve respect to orgin (0,0) point.

Syntax:
:LsCurveMirror

Arguments:
None

Command abbreviation:
:lcm<Space>

Example of use:

Make visual selection line with data lines:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
   >|                 0.0                 0.0     |<
   >|                 4.0                 4.0     |<
   >|                 6.0                 6.0     |<
   >|                10.0                10.0     |<
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsCurveMirror
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
    |               -10.0               -10.0     |
    |                -6.0                -6.0     |
    |                -4.0                -4.0     |
    |                 0.0                 0.0     |
    |                 4.0                 4.0     |
    |                 6.0                 6.0     |
    |                10.0                10.0     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

--------------------------------------------------------------------------------
7.1.6 LsCurveCut                                               *lsdyna-curveCut*

Description:
Command to cut curve respect to user specific x range.

Synatx:
:LsCurveCut xLow:xUp

Arguments:
xLow - low boundary of x range (optional, if empty first point used)
xUp  - up boundary of x range (optional, if empty last point used)

Command abbreviation:
:lcc<Space>

Example of use:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
    |                 0.0                 0.0     |
    |                 0.2                 0.2     |
    |                 0.4                 0.4     |
    |                 0.6                 0.6     |
    |                 0.8                 0.8     |
    |                 1.0                 1.0     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsCurveCut 0.2:0.7
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
    |                 0.2                 0.2     |
    |                 0.4                 0.4     |
    |                 0.6                 0.6     |
    |                 0.7                 0.7     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsCurveCut :0.5
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
    |                 0.0                 0.0     |
    |                 0.2                 0.2     |
    |                 0.4                 0.4     |
    |                 0.5                 0.5     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsCurveCut 0.7:
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*DEFINE_CURVE_TITLE                          |
    |$# title                                     |
    |Load                                         |
    |$#    lcid      sidr       sfa       sfo     |
    |         1         0       1.0       1.0     |
    |$#                a1                  o1     |
    |                 0.7                 0.7     |
    |                 0.8                 0.8     |
    |                 1.0                 1.0     |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

NOTE: Linear extrapolation is used for first and last point.

--------------------------------------------------------------------------------
7.2 Node commands                                          *lsdyna-nodeCommands*

Node commands are designed to work with data lines under *NODE keyword.
Following transformation are available:
- scale
- rotate
- translate
- pos6p (six points position)
- mirror

Keyword lines {starting with '*') and comment lines (starting with '$') are
ignored in selection.

Commands arguments follow *DEFINE_TRANSFORMATION syntax.
--------------------------------------------------------------------------------
7.2.1 LsNodeScale                                             *lsdyna-nodeScale*

Description:
Scale node coordinates.

Syntax:
:LsNodeScale a1 a2 a3

Arguments:
a1 : x scale factor
a2 : y scale factor
a3 : z scale factor

Command abbreviation:
:lns<Space>

Example (change system unit from m to mm):

Make visual selection:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*NODE                                        |
    |$#   nid       x       y       z             |
   >|       1   0.001   0.001   0.001             |<
   >|       2   0.002   0.002   0.002             |<
   >|       3   0.003   0.003   0.003             |<
    |$                                            |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsNodeScale 1000.0 1000.0 1000.0
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*NODE                                        |
    |$#   nid       x       y       z             |
    |       1     1.0     1.0     1.0             |
    |       2     2.0     2.0     2.0             |
    |       3     3.0     3.0     3.0             |
    |$                                            |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

--------------------------------------------------------------------------------
7.2.2 LsNodeRotate                                           *lsdyna-nodeRotate*

Description:
Rotate mesh by defined angle around defined vector.

Syntax:
:LsNodeRotate a1 a2 a3 a4 a5 a6 a7

Arguments:
a1 : x part of rotation vector
a2 : y part of rotation vector
a3 : z part of rotation vector
a4 : x coordinate of rotation point
a5 : y coordinate of rotation point
a6 : z coordinate of rotation point
a7 : rotation angle (degrees)

Command abbreviation:
:lnr<Space>

Example (rotate mesh respect to global Z axis by 30deg):

Make visual selection:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*NODE                                        |
    |$#   nid       x       y       z             |
    |       1     1.0     1.0     1.0             |
    |       2     2.0     2.0     2.0             |
    |       3     3.0     3.0     3.0             |
    |$                                            |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsNodeRotate 0.0 0.0 1.0 0.0 0.0 0.0 30.0
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*NODE                                        |
    |$#   nid       x       y       z             |
    |       1 0.36602 1.36602     1.0             |
    |       2 0.73205 2.73205     2.0             |
    |       3 1.09807 4.09807     3.0             |
    |$                                            |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

--------------------------------------------------------------------------------
7.2.3 LsNodeTranslate                                     *lsdyna-nodeTranslate*

Description:
Translate node coordinates in x, y, z direction.

Syntax:
:LsNodeTranslate a1 a2 a3

Arguments:
a1 : x translation value
a2 : y translation value
a3 : z translation value

Command abbreviation:
:lns<Space>

Example (translate mesh by vector [10, 0 -20]:

Make visual selection:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*NODE                                        |
    |$#   nid       x       y       z             |
    |       1     1.0     1.0     1.0             |
    |       2     2.0     2.0     2.0             |
    |       3     3.0     3.0     3.0             |
    |$                                            |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsNodeTranslate 10.0 0.0 -20.0
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*NODE                                        |
    |$#   nid       x       y       z             |
    |       1    11.0     1.0   -19.0             |
    |       2    12.0     2.0   -18.0             |
    |       3    13.0     3.0   -17.0             |
    |$                                            |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

--------------------------------------------------------------------------------
7.2.4 LsNodePos6p                                             *lsdyna-nodePos6p*

Description:
Set position using 6 points. Position is made from P1-P2-P3 to P4-P5-P6 the
same as in *DEFINE_TRANSFORMATION keyword.
The transformation includes three steps:
- translate from P1 to P4
- rotate so P2 lays on P5
- rotate so P3 lays on P6

Syntax:
:LsNodePos6p p1x p1y p1z p2x p2y p2z p3x p3y p3z p4x p4y p4z p5x p5y p5z p6x p6y p6z

Arguments:
p1x : P1 x-coord
p1y : P1 y-coord
p1z : P1 z-coord
p2x : P2 x-coord
p2y : P2 y-coord
p2z : P2 z-coord
p3x : P3 x-coord
p3y : P3 y-coord
p3z : P3 z-coord
p4x : P4 x-coord
p4y : P4 y-coord
p4z : P4 z-coord
p5x : P5 x-coord
p5y : P5 y-coord
p5z : P5 z-coord
p6x : P6 x-coord
p6y : P6 y-coord
p6z : P6 z-coord

Command abbreviation:
:lnp<Space>

--------------------------------------------------------------------------------
7.2.5 LsNodeMirror                                           *lsdyna-nodeMirror*

Description:
Reflect node respect to defined plane.

Syntax:
:LsNodeMirror plane point

Arguments:
plane : plane definition
point : point which the plane pass

Command abbreviation:
:lnm<Space>

Plane definition can be vector normal to user plane ("x", "y", "z") or plane
description ("xy", "xz", "yz"). Both "xy" and "yx" are accepted and works the
same. The point is only one coordinate which lay on normal vector to the plane.

Example of mirror respect to "yz" plane and point 0.0.

                            | yz plane passing through 0.0
                            |
                            |
        (-7, 10, 10) o      |      o (7, 10, 10)
                            |
                            |
      ---------------+------+------+--------------->
                    -7      0      7                x

Example of mirror respect to "yz" plane and point 2.0.

                              | yz plane passing through 2.0
                              |
                              |
            (-3, 10, 10) o    |    o (7, 10, 10)
                              |
                              |
      -------------------+--+-+----+--------------->
                        -3  0 2    7                x

Example of use:

Make visual selection:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*NODE                                        |
    |$#   nid       x       y       z             |
   >|       1     1.0     1.0     1.0             |<
   >|       2     2.0     2.0     2.0             |<
   >|       3     3.0     3.0     3.0             |<
    |$                                            |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsNodeMirror y 0.0
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*NODE                                        |
    |$#   nid       x       y       z             |
    |       1     1.0    -1.0     1.0             |
    |       2     2.0    -2.0     2.0             |
    |       3     3.0    -3.0     3.0             |
    |$                                            |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsNodeMirror xy 10.0
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*NODE                                        |
    |$#   nid       x       y       z             |
    |       1     1.0     1.0    19.0             |
    |       2     2.0     2.0    18.0             |
    |       3     3.0     3.0    17.0             |
    |$                                            |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

--------------------------------------------------------------------------------
7.3 Element commands                                       *lsdyna-elemCommands*

Element commands are design to work with data lines under *ELEMENT_ keyword.
For instance you can do operation like sort element table respect to part id,
update part id to new value, offset id of elements.

--------------------------------------------------------------------------------
7.3.1 LsElemFindPid                                         *lsdyna-elemFindPid*

Description:
Find all elements with specific part id in element table.

Syntax:
:LsElemFindPid pid

Arguments:
pid - part id (optional)
      With no argument all pids will be found.
      Mulitiply items and ranges are supported:
      :LsElemFindPid 100
      :LsElemFindPid 5 100 200
      :LsElemFindPid 1 10:99 200

Command abbreviation:
:lef<Space>

Example of use:

Make visual selection line with element lines:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*ELEMENT_SHELL                               |
    |$#   eid     pid    n1     n2     n3     n4  |
   >|       1    2000     1      2      3      4  |<
   >|       2    1000     5      6      7      8  |<
   >|       3    3000     9     10     11     12  |<
   >|       4    2000    13     14     15     16  |<
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsElemFindPid
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*ELEMENT_SHELL                               |
    |$#   eid     pid    n1     n2     n3     n4  |
    |$ Part:     1000                             |
    |       2    1000     5      6      7      8  |
    |$ Part:     2000                             |
    |       1    2000     1      2      3      4  |
    |       4    2000    13     14     15     16  |
    |$ Part:     3000                             |
    |       3    3000     9     10     11     12  |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

Make visual selection line with element lines:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*ELEMENT_SHELL                               |
    |$#   eid     pid    n1     n2     n3     n4  |
   >|       1    2000     1      2      3      4  |<
   >|       2    1000     5      6      7      8  |<
   >|       3    3000     9     10     11     12  |<
   >|       4    2000    13     14     15     16  |<
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsElemFindPid 2000
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*ELEMENT_SHELL                               |
    |$#   eid     pid    n1     n2     n3     n4  |
    |       2    1000     5      6      7      8  |
    |$ Part: 2000                                 |
    |       1    2000     1      2      3      4  |
    |       4    2000    13     14     15     16  |
    |$                                            |
    |       3    3000     9     10     11     12  |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
--------------------------------------------------------------------------------
7.3.2 LsElemChangePid                                     *lsdyna-elemChangePid*

Description:
Change part id in element definition.

Syntax:
:LsElemChangePid newPid
:LsElemChangePid oldPid newPid

Arguments:
newPID : new part id
oldPID : part id to change (optional)

Command abbreviation:
:lec<Space>

With only newPid argument all pids will be updated, with oldPid argument only
specific pids will be updated. Part ids can be defined as parameter name as well.
Keyword and comment lines from selection are ignored.

Example of use:

Make visual selection line with element lines:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*ELEMENT_SHELL                               |
    |$#   eid     pid    n1     n2     n3     n4  |
   >|       1      10     1      2      3      4  |<
   >|       2      10     5      6      7      8  |<
   >|       3      20     9     10     11     12  |<
   >|       4      20    13     14     15     16  |<
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsElemChangePid 1000
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*ELEMENT_SHELL                               |
    |$#   eid     pid    n1     n2     n3     n4  |
    |       1    1000     1      2      3      4  |
    |       2    1000     5      6      7      8  |
    |       3    1000     9     10     11     12  |
    |       4    1000    13     14     15     16  |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsElemChangePid 20 1000
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*ELEMENT_SHELL                               |
    |$#   eid     pid    n1     n2     n3     n4  |
    |       1      10     1      2      3      4  |
    |       2      10     5      6      7      8  |
    |       3    1000     9     10     11     12  |
    |       4    1000    13     14     15     16  |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsDynaChangePID 10 pid1
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*ELEMENT_SHELL                               |
    |$#   eid     pid    n1     n2     n3     n4  |
    |       1   &pid1     1      2      3      4  |
    |       2   &pid1     5      6      7      8  |
    |       3      20     9     10     11     12  |
    |       4      20    13     14     15     16  |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

Sign "&" before parameter name is not mandatory.

--------------------------------------------------------------------------------
7.3.3 LsElemReverseNormals                           *lsdyna-elemReverseNormals*

Description:
Reverse element normal orientation.

Syntax:
:LsElemReverseNormals

Arguments:
None

Command abbreviation:
:ler<Space>

Keyword and comment lines from selection are ignored.

NOTE: Only tria and quad elements are supported.

Example of use:

Make visual selection line with element lines:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*ELEMENT_SHELL                               |
    |$#   eid     pid    n1     n2     n3     n4  |
   >|       1       1     1      2      3      4  |<
   >|       2       1     5      6      7      8  |<
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsElemReverseNormals
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*ELEMENT_SHELL                               |
    |$#   eid     pid    n1     n2     n3     n4  |
    |       1       1     1      4      3      2  |
    |       2       1     5      8      7      6  |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
--------------------------------------------------------------------------------
7.4 Miscellaneous commands                                 *lsdyna-miscCommands*

--------------------------------------------------------------------------------
7.4.1 LsOffsetId                                               *lsdyna-offsetId*

Description:
Offset node/element/part ids under misc keywords (*NODE, *ELEMENT_, *SET_).

Syntax:
:LsOffsetId [enp] offset

Arguments:
 [nep]  : flag for offset
          n : offset node id
          e : offset element id
          p : offset part id
 offset : offset value

Offset flags can be collected in one:
 en  : offset element and node id
 pe  : offset part and element id
 nep : offset node, element and part id

Order of arguments is unimportant. "en" and "ne" works the same.
Keyword and comment lines are ignored.

NOTE: For keywords where only one id can be offset (*NODE) [nep] flags are not required.
      If used will be ignored.

Example of use:

Make visual selection line with node lines:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*NODE                                        |
    |$#   nid       x       y       z             |
   >|       1     1.0     1.0     1.0             |<
   >|       2     2.0     2.0     2.0             |<
   >|       3     3.0     3.0     3.0             |<
    |$                                            |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsOffsetId 1000
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*NODE                                        |
    |$#   nid       x       y       z             |
    |    1000     1.0     1.0     1.0             |
    |    1000     2.0     2.0     2.0             |
    |    1000     3.0     3.0     3.0             |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

Make visual selection with *SET keyword:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
   >|*SET_NODE_LIST                               |
   >|$#   sid                                     |<
   >|       1                                     |<
   >|$#  nid1    nid2    nid3    nid4             |<
   >|       1       2       3       4             |<
   >|      10      20                             |<
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsOffsetId 1000
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*SET_NODE_LIST                               |
    |$#   sid                                     |
    |    1001                                     |
    |$#  nid1    nid2    nid3    nid4             |
    |    1001    1002    1003    1004             |
    |    1010    1020                             |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

Make visual selection line with element lines:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*ELEMENT_SHELL                               |
    |$#   eid     pid    n1     n2     n3     n4  |
   >|       1      10     1      2      3      4  |<
   >|       2      10     5      6      7      8  |<
   >|       3      11     9     10     11     12  |<
   >|       4      11    13     14     15     16  |<
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsOffsetId p 500
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*ELEMENT_SHELL                               |
    |$#   eid     pid    n1     n2     n3     n4  |
    |       1     510     1      2      3      4  |
    |       2     510     5      6      7      8  |
    |       3     511     9     10     11     12  |
    |       4     511    13     14     15     16  |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsOffsetId e 2000
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*ELEMENT_SHELL                               |
    |$#   eid     pid    n1     n2     n3     n4  |
    |    2001      10     1      2      3      4  |
    |    2002      10     5      6      7      8  |
    |    2003      11     9     10     11     12  |
    |    2004      11    13     14     15     16  |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsOffsetId ne 1000
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*ELEMENT_SHELL                               |
    |$#   eid     pid    n1     n2     n3     n4  |
    |    1001      10  1001   1002   1003   1004  |
    |    1002      10  1005   1006   1007   1008  |
    |    1003      11  1009   1010   1011   1012  |
    |    1004      11  1013   1014   1015   1016  |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+
>
	:LsOffsetId pen 2000
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*ELEMENT_SHELL                               |
    |$#   eid     pid    n1     n2     n3     n4  |
    |    2001    2010  2001   2002   2003   2004  |
    |    2002    2010  2005   2006   2007   2008  |
    |    2003    2011  2009   2000   2011   2012  |
    |    2004    2011  2013   2014   2015   2016  |
    |$                                            |
    |command-line=================================+
    |                                             |
    +---------------------------------------------+

--------------------------------------------------------------------------------
7.4.2 LsInclCheckPath                                     *lsdyna-inclCheckPath*

Command LsInclCheckPath tests if all paths and include names valid.
The command support *INCLUDE_PATH keyword.

Example of use:

    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*INCLUDE_PATH                                |
    |/FEM/LSDYNA/INCL/MAT                         |
    |$                                            |
    |*INCLUDE                                     |
    |../OO_INC/include_A.inc                      |
    |../OO_INC/include_X.inc                      |
    |*INCLUDE                                     |
    |matdbs_v01.inc                               |
    |matdbs_v02.inc                               |
    |$                                            |
    |~                                            |
    |command-line=================================|
    |                                             |
    +---------------------------------------------+
>
	:LsInclCheckPath
<
    +---------------------------------------------+
    |lsdyna_model.key=============================|
    |$                                            |
    |*INCLUDE_PATH                                |
    |/FEM/LSDYNA/INCL/MAT                         |
    |$                                            |
    |*INCLUDE                                     |
    |../OO_INC/include_A.inc                      |
    |../OO_INC/include_X.inc                      |
    |*INCLUDE                                     |
    |matdbs_v01.inc                               |
    |matdbs_v02.inc                               |
    |$                                            |
    |~                                            |
    |command-line=================================|
    |--- Included files not found in path ---     |
    |../OO_INC/include_X.inc                      |
    |matdbs_v02.inc                               |
    |Press ENTER or type command to continue      |
    +---------------------------------------------+

--------------------------------------------------------------------------------
7.4.3 LsIncl2Buff                                             *lsdyna-incl2Buff*

Description:
The command open all *INCLUDES as buffers in VIM.

Syntax:
:LsIncl2Buff

Arguments:
- none

--------------------------------------------------------------------------------
7.4.4 LsTags                                                     *lsdyna-lsTags*

Description:
The command generates tags file.
- linux:   ~/.vimrc/.dtags
- windows: ~/vimfiles/.dtags

Syntax:
:LsTags

Arguments:
- none

================================================================================
8. License                                                     *lsdyna-license*

Ls-Dyna filetype plugin for VIM
Copyright (C) 2014 Bartosz Gradzik (bartosz.gradzik@hotmail.com)

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.

================================================================================
vim:tw=80:ts=4:ft=help:norl:
